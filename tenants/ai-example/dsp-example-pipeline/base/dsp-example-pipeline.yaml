apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dsp-example
spec:
  params:
    - default: 'https://github.com/redhat-ai-services/kubeflow-pipelines-examples.git'
      description: Repo URL
      name: GIT_URL
      type: string
    - default: 'pipelines/11_iris_training_pipeline.py'
      description: The location of the python script containing the kfp pipeline
      name: KFP_SCRIPT
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: 3.11-ubi9
      name: PYTHON_IMAGE
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/ai-example-training/dsp-example'
      name: TARGET_IMAGE
      type: string
    - default: 'https://ds-pipeline-dspa.ai-example-training.svc.cluster.local:8443'
      name: KUBEFLOW_ENDPOINT
      type: string
  tasks:
    - name: git-clone
      params:
        - name: URL
          value: $(params.GIT_URL)
        - name: REVISION
          value: $(params.GIT_REVISION)
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: source
    - name: s2i-python
      params:
        - name: VERSION
          value: $(params.PYTHON_IMAGE)
        - name: CONTEXT
          value: .
        - name: IMAGE
          value: $(params.TARGET_IMAGE)
      runAfter:
        - git-clone
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: s2i-python
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: source
          workspace: source
    - name: execute-kubeflow-pipeline
      params:
        - name: IMAGE
          value: $(params.TARGET_IMAGE)
        - name: TAG
          value: latest
        - name: SCRIPT
          value: $(params.KFP_SCRIPT)
        - name: KUBEFLOW_ENDPOINT
          value: $(params.KUBEFLOW_ENDPOINT)
      runAfter:
        - s2i-python
      taskRef:
        kind: Task
        name: execute-kubeflow-pipeline
  workspaces:
    - name: source
